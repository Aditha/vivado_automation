#!/usr/bin/tclsh
# author : aditha rajakaruna
# email : aditha102@gmail.com
# ---------------------------------------------------------
proc print_usage {} {
    puts "Usage vivado_run <options>"
    puts "Options : "
    puts "\ts\t: synthesize"
    puts "\tp\t: place"
    puts "\tr\t: route"
    puts "\tb\t: generate bitstream"
    puts "\th\t: print usage"
}
# ---------------------------------------------------------
proc run_synthesize { top logdir outdir } {
    synth_design -top $top
    write_checkpoint -force $outdir/post_synth
    report_utilization -file $logdir/post_synth_util.rpt
    report_timing -sort_by group -max_paths 5 -path_type \
        summary -file $logdir/post_synth_timing.rpt
}
# ---------------------------------------------------------
proc run_place { logdir outdir } {
    opt_design
    power_opt_design
    place_design
    phys_opt_design
    write_checkpoint -force $outdir/post_place
    report_clock_utilization -file $logdir/clock_util.rpt
    report_utilization -file $logdir/post_place_util.rpt
    report_timing -sort_by group -max_paths 5 -path_type \
    summary -file $logdir/post_place_timing.rpt
}
# ---------------------------------------------------------
proc run_route { top logdir outdir } {
    route_design
    write_checkpoint -force $outdir/post_route
    report_timing_summary -file $logdir/post_route_timing_summary.rpt
    report_utilization -file $logdir/post_route_util.rpt
    report_power -file $logdir/post_route_power.rpt
    report_drc -file $logdir/post_imp_drc.rpt
    write_verilog -force "${outdir}/${top}_impl_netlist.v"
    write_xdc -no_fixed_only -force "${outdir}/${top}_impl.xdc"
}
# ---------------------------------------------------------
proc run_bitgen {top outdir} {
    write_bitstream "${outdir}/${top}_design.bit"
}
# - Main --------------------------------------------------
set arglist [join $argv ""]
set en_synth 0
set en_place 0
set en_route 0
set en_bitgen 0
if { [string length $arglist] == 0 } {
    set en_synth 1
    set en_place 1
    set en_route 1
    set en_bitgen 1
} else {
    if { [string match -nocase *h* $arglist] } {
        print_usage
        exit
    }
    if { [string match -nocase *s* $arglist] } {
        set en_synth 1
    }
    if { [string match -nocase *p* $arglist] } {
        set en_place 1
    }
    if { [string match -nocase *r* $arglist] } {
        set en_route 1
    }
    if { [string match -nocase *b* $arglist] } {
        set en_bitgen 1
    }
}
# - Gathering inputs --------------------------------------
if { [catch {set_part $device} errmsg] } {
    puts "Error : ${errmsg}"
    exit
}
foreach rtl_src_path $rtl_src_paths {
    if { [catch {read_verilog [glob $rtl_src_path/*.v]} errmsg] } {
        puts "Error : ${errmsg}"
        exit
    }
}
